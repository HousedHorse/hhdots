and
as
assert
break
class
continue
def
del
else
elif
except
exec
for
finally
from
global
import
if
in
is
lambda
not
nonlocal
or
pass
return
raise
try
while
with
yield
celery
CharField
HttpResponse
expat
flask
Flask
.forms
kwargs
models
.models
MySQLdb
numpy
patterns
pygame
render
render_template
requests
self
self.assertEquals(
self.assertTrue(
self.assertGreater(
self.assertGreaterEqual(
self.assertLess(
self.assertLessEqual(
self.assertRaises(
self.assertRaisesRegexp(
object
protocol
reactor
twisted
views
.views
xml
__add__
__copy__(
__del__(
__doc__
__file__
__future__
__get__(
__getitem__(
__name__
__main__
__init__(
).__init__(
__iter__(
__import__(
__set__(
__setitem__(
__str__(
__unicode__(
__version__
dataReceived(
buildProtocol(
--- String type attributes and methods. (manually entered). Only works with quotes, not objects. e.g. 'foo'.startswith(  ---
.capitalize(
.center(
.count(
.decode(
.encode(
.endswith(
.expandtabs(
.find(
.format(
.index(
.isalnum(
.isalpha(
.isdigit(
.islower(
.isspace(
.istitle(
.isupper(
.join(
.ljust(
.lower(
.lstrip(
.partition(
.replace(
.rfind(
.rindex(
.rjust(
.rpartition(
.rsplit(
.rstrip(
.split(
.startswith(
.splitlines(
.strip(
.swapcase(
.title(
.translate(
.upper(
.zfill(
--- str builtin attributes and methods. (Manually entered). e.g. str.startswith(  ---
str.capitalize(
str.center(
str.count(
str.decode(
str.encode(
str.endswith(
str.expandtabs(
str.find(
str.format(
str.index(
str.isalnum(
str.isalpha(
str.isdigit(
str.islower(
str.isspace(
str.istitle(
str.isupper(
str.join(
str.ljust(
str.lower(
str.lstrip(
str.partition(
str.replace(
str.rfind(
str.rindex(
str.rjust(
str.rpartition(
str.rsplit(
str.rstrip(
str.split(
str.splitlines(
str.startswith(
str.strip(
str.swapcase(
str.title(
str.translate(
str.upper(
str.zfill(
--- from __builtin__ import * ---
ArithmeticError(
AssertionError(
AttributeError(
BaseException(
BufferError(
BytesWarning(
DeprecationWarning(
EOFError(
Ellipsis
EnvironmentError(
Exception(
False
FloatingPointError(
FutureWarning(
GeneratorExit(
IOError(
ImportError(
ImportWarning(
IndentationError(
IndexError(
KeyError(
KeyboardInterrupt(
LookupError(
MemoryError(
NameError(
None
NotImplemented
NotImplementedError(
OSError(
OverflowError(
PendingDeprecationWarning(
ReferenceError(
RuntimeError(
RuntimeWarning(
StandardError(
StopIteration(
SyntaxError(
SyntaxWarning(
SystemError(
SystemExit(
TabError(
True
TypeError(
UnboundLocalError(
UnicodeDecodeError(
UnicodeEncodeError(
UnicodeError(
UnicodeTranslateError(
UnicodeWarning(
UserWarning(
ValueError(
Warning(
ZeroDivisionError(
abs(
all(
any(
apply(
basestring(
bin(
bool(
buffer(
bytearray(
bytes(
callable(
chr(
classmethod(
cmp(
coerce(
compile(
complex(
copyright(
credits(
delattr(
dict(
dir(
divmod(
enumerate(
eval(
execfile(
exit(
file(
filter(
float(
format(
frozenset(
getattr(
globals(
hasattr(
hash(
help(
hex(
id(
input(
int(
intern(
isinstance(
issubclass(
iter(
len(
license(
list(
locals(
long(
map(
max(
memoryview(
min(
next(
object(
oct(
open(
ord(
pow(
print(
property(
quit(
range(
raw_input(
reduce(
reload(
repr(
reversed(
round(
set(
setattr(
slice(
sorted(
staticmethod(
str(
sum(
super(
tuple(
type(
unichr(
unicode(
vars(
xrange(
zip(
